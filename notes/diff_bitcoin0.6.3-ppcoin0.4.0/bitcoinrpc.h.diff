--- a/src/bitcoinrpc.h
+++ b/src/bitcoinrpc.h
@@ -9,6 +9,8 @@
 #include <string>
 #include <map>
 
+class CReserveKey;
+
 #include "json/json_spirit_reader_template.h"
 #include "json/json_spirit_writer_template.h"
 #include "json/json_spirit_utils.h"
@@ -16,6 +18,9 @@
 void ThreadRPCServer(void* parg);
 int CommandLineRPC(int argc, char *argv[]);
 
+/** Convert parameter values for RPC call from strings to command-specific JSON objects. */
+json_spirit::Array RPCConvertValues(const std::string &strMethod, const std::vector<std::string> &strParams);
+
 typedef json_spirit::Value(*rpcfn_type)(const json_spirit::Array& params, bool fHelp);
 
 class CRPCCommand
@@ -26,6 +31,9 @@ public:
     bool okSafeMode;
 };
 
+/**
+ * Bitcoin RPC command dispatcher.
+ */
 class CRPCTable
 {
 private:
@@ -34,8 +42,18 @@ public:
     CRPCTable();
     const CRPCCommand* operator[](std::string name) const;
     std::string help(std::string name) const;
+
+    /**
+     * Execute a method.
+     * @param method   Method to execute
+     * @param params   Array of arguments (JSON objects)
+     * @returns Result of the call.
+     * @throws an exception (json_spirit::Value) when an error happens.
+     */
+    json_spirit::Value execute(const std::string &method, const json_spirit::Array &params) const;
 };
 
 extern const CRPCTable tableRPC;
+extern CReserveKey* pMiningKey;
 
 #endif
diff --git a/src/checkpoints.cpp b/src/checkpoints.cpp
index 67e2c4c..d2fda0b 100644
